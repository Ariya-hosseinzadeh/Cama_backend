# Generated by Django 5.1.5 on 2025-04-20 07:29

import classroom.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Tags', '0002_delete_tag'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LinkAccess', models.CharField(default=classroom.models.generate_unique_link, max_length=18, unique=True)),
                ('username', models.CharField(max_length=18)),
                ('CodeCreator', models.CharField(max_length=18)),
                ('Title', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField()),
                ('CapacityCourse', models.IntegerField(default=1)),
                ('CountClass', models.IntegerField(default=1)),
                ('SuggestedTime', models.DateTimeField()),
                ('images', models.ImageField(blank=True, null=True, upload_to='media/courseImages')),
                ('is_active', models.BooleanField(default=True)),
                ('price_course', models.FloatField(blank=True, null=True)),
                ('level_course', models.IntegerField(choices=[(1, 'elementary'), (3, 'intermediate'), (5, 'advanced')], default=1)),
                ('teacher_rating', models.FloatField(default=0)),
                ('Creator', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='creator', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='coursesCreate', to='Tags.category')),
                ('enrolled_students', models.ManyToManyField(related_name='enrolled_students', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AgreementCourseCreate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Time', models.DateTimeField()),
                ('average_rating', models.FloatField(default=0.0)),
                ('students', models.ManyToManyField(related_name='students_attention', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_course', to=settings.AUTH_USER_MODEL)),
                ('createCourse', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_create', to='classroom.coursecreate')),
            ],
            options={
                'verbose_name_plural': 'Agrement Course Create',
                'ordering': ['-Time'],
            },
        ),
        migrations.CreateModel(
            name='CourseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LinkAccess', models.CharField(default=classroom.models.generate_unique_link, max_length=18, unique=True)),
                ('username', models.CharField(max_length=18)),
                ('CodeCreator', models.CharField(max_length=18)),
                ('Title', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField()),
                ('CountClass', models.IntegerField(default=1)),
                ('SuggestedTime', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('price_course', models.FloatField(blank=True, null=True)),
                ('images', models.ImageField(blank=True, null=True, upload_to='')),
                ('level_course', models.IntegerField(choices=[(1, 'elementary'), (3, 'intermediate'), (5, 'advanced')], default=1)),
                ('Creator', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='requester', to=settings.AUTH_USER_MODEL)),
                ('accepted_teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='accepted_teacher', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='Tags.category')),
            ],
            options={
                'verbose_name_plural': 'Class Requests',
                'ordering': ['-SuggestedTime'],
            },
        ),
        migrations.CreateModel(
            name='CourseInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField()),
                ('response', models.TextField(blank=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to=settings.AUTH_USER_MODEL)),
                ('course_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='classroom.courserequest')),
            ],
        ),
        migrations.CreateModel(
            name='AgreementCourseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Time', models.DateTimeField()),
                ('average_rating', models.FloatField(default=0.0)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='creator_classRequest', to=settings.AUTH_USER_MODEL)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_invent', to=settings.AUTH_USER_MODEL)),
                ('requestCourse', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='requestCourse', to='classroom.courserequest')),
            ],
            options={
                'verbose_name_plural': 'Agreement Course Requests',
                'ordering': ['-Time'],
            },
        ),
        migrations.CreateModel(
            name='ProposalCreateCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'در حال انتظار '), ('accepted', 'پذیرفته شده'), ('rejected', 'رد شده')], default='pending', max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('response', models.TextField(blank=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classroom.coursecreate')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Proposals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProposalRequestCourse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('agreement_price', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('pending', 'در حال انتظار '), ('accepted', 'پذیرفته شده'), ('rejected', 'رد شده')], default='pending', max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('response', models.TextField(blank=True)),
                ('Creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Course_Creator', to=settings.AUTH_USER_MODEL)),
                ('course_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposals_Request', to='classroom.courserequest')),
                ('user_proposal', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Proposals_Request',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WaitingHall',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_course', models.CharField(max_length=500)),
                ('Title', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField()),
                ('price', models.FloatField(blank=True, default=0, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='media/waitingHallImages')),
                ('CodeCreator', models.CharField(max_length=18)),
                ('Creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Creator', to=settings.AUTH_USER_MODEL)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
    ]
